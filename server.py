from flask import Flask, request
from flask_socketio import SocketIO, send, disconnect
import os, random

app = Flask(__name__)
app.config['SECRET_KEY'] = 'secret!'
socketio = SocketIO(app, cors_allowed_origins='*')

# –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–º–µ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ session ID
users = {}

@app.route('/')
def index():
    return '–°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î!'

@socketio.on('lox')
def control():
    print('–ó–∞—á–µ–∫–∞–π—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤–∏ –±–æ—Ç ')
    send('\n\n –í—ñ—Ç–∞—é –≤–∏ –ø—Ä–æ–π—à–ª–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É !üëç')
    
@socketio.on('connect')
def handle_connect():
    print(f"[–ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø] –ö–ª—ñ—î–Ω—Ç: {request.sid}")

@socketio.on('set_username')
def handle_set_username(username):
    users[request.sid] = username
    print(f"[–Ü–ú º–Ø –í–°–¢–ê–ù–û–í–õ–ï–ù–û] {request.sid} —Ç–µ–ø–µ—Ä '{username}'")
    send(f"{username} –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ —á–∞—Ç—É.", broadcast=True)

@socketio.on('message')
def handle_message(msg):
    username = users.get(request.sid, "–ê–Ω–æ–Ω—ñ–º")
    full_msg = f"{username}: {msg}"
    print(f"[–ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø] {full_msg}")
    send(full_msg, broadcast=True)

@socketio.on('random')
def generate_number():
    resultNum = random.randint(0,100)
    send(resultNum, broadcast=True)

@socketio.on('reserved')
def reserved():
    send(f"–í–∞—à–∞ –∫–∞—Å—Ç–æ–º–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è =>", to=request.sid)


@socketio.on('users')
def list_users(data=None):
    if data is None:
        data = ''
    
    user_list = list(users.values())
    send(f"[SERVER] Active users: {', '.join(user_list)}", to=request.sid)
    
    if data == 'start':
        print('emit success DMs')
        socketio.emit("private_message", {'clients': users}, to=request.sid)


        
@socketio.on('send_dm')   
def send_dm_msg(data):
    send(f"Receiver: {data['rcver']}, message: {data['msg']}", to=data['rcver'])

@socketio.on('disconnect')
def handle_disconnect():
    username = users.pop(request.sid, "–ê–Ω–æ–Ω—ñ–º")
    print(f"[–í–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø] {username} ({request.sid})")
    send(f"{username} –≤–∏–π—à–æ–≤ –∑ —á–∞—Ç—É.", broadcast=True)

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 5000))
    socketio.run(app, host='0.0.0.0', port=port)
